<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kaishengit.mapper.UserMapper">
    <resultMap id="userMap" type="user">
        <id column="id" property="id"/>
        <result column="user_name" property="userName"/>
        <result column="passwords" property="passwords"/>
        <result column="address" property="address"/>
        <result column="dept_id" property="deptId"/>
        <association property="dept" javaType="com.kaishengit.entily.Dept"><!--property是user对象中的dept属性。
        javaType是什么类型，也就是dept类型，因为封装的数据是dept对象中的数据-->
            <id column="dept_id" property="id"/>
            <result column="dept_department" property="deptDepartment"/>
        </association>
    </resultMap>
    <!--1.如果在一个对象中给另一个对象赋值，那么就需要使用resultMap节点，具体如上。注意
    select 中使用resultMap属性指向resultMap节点中的userMap
        2.如果不使用第一种方法，可以使用给别名，在user属性中属于dept表的属性是起一个别名。
        使用了对象图导航语言OGNl-->
    <select id="findById" resultType="user">
        SELECT
            t_user.id,
            t_user.user_name,
            t_user.passwords,
            t_user.address,
            t_user.dept_id,
            t_dept.id AS 'dept.id',
            t_dept.dept_department AS 'dept.deptDepartment'

        FROM
            t_user
        LEFT JOIN t_dept ON t_user.dept_id = t_dept.id
        WHERE
	        t_user.id = #{id};
    </select>
</mapper>